/* tslint:disable */
/* eslint-disable */
/**
 * traP knoQ
 * This is a sample knoQ server. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Duration,
    DurationFromJSON,
    DurationFromJSONTyped,
    DurationToJSON,
} from './';

/**
 * 
 * @export
 * @interface ResponseRoom
 */
export interface ResponseRoom {
    /**
     * 
     * @type {string}
     * @memberof ResponseRoom
     */
    roomId: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoom
     */
    place: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoom
     */
    timeStart: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoom
     */
    timeEnd: string;
    /**
     * 部屋が使えることを保証する
     * @type {boolean}
     * @memberof ResponseRoom
     */
    verified: boolean;
    /**
     * どのイベントも使用していない時間帯
     * @type {Array<Duration>}
     * @memberof ResponseRoom
     */
    freeTimes: Array<Duration>;
    /**
     * 部屋を共用すれば、使用できる時間帯
     * @type {Array<Duration>}
     * @memberof ResponseRoom
     */
    sharedTimes: Array<Duration>;
    /**
     * 編集権を持つユーザー
     * @type {Array<string>}
     * @memberof ResponseRoom
     */
    admins: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoom
     */
    createdBy: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoom
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoom
     */
    updatedAt: string;
}

export function ResponseRoomFromJSON(json: any): ResponseRoom {
    return ResponseRoomFromJSONTyped(json, false);
}

export function ResponseRoomFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseRoom {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomId': json['roomId'],
        'place': json['place'],
        'timeStart': json['timeStart'],
        'timeEnd': json['timeEnd'],
        'verified': json['verified'],
        'freeTimes': ((json['freeTimes'] as Array<any>).map(DurationFromJSON)),
        'sharedTimes': ((json['sharedTimes'] as Array<any>).map(DurationFromJSON)),
        'admins': json['admins'],
        'createdBy': json['createdBy'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function ResponseRoomToJSON(value?: ResponseRoom | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomId': value.roomId,
        'place': value.place,
        'timeStart': value.timeStart,
        'timeEnd': value.timeEnd,
        'verified': value.verified,
        'freeTimes': ((value.freeTimes as Array<any>).map(DurationToJSON)),
        'sharedTimes': ((value.sharedTimes as Array<any>).map(DurationToJSON)),
        'admins': value.admins,
        'createdBy': value.createdBy,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}


