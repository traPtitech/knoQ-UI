/* tslint:disable */
/* eslint-disable */
/**
 * traP knoQ
 * This is a sample knoQ server. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResponseEventTags,
    ResponseEventTagsFromJSON,
    ResponseEventTagsFromJSONTyped,
    ResponseEventTagsToJSON,
    ResponseGroup,
    ResponseGroupFromJSON,
    ResponseGroupFromJSONTyped,
    ResponseGroupToJSON,
    ResponseRoom,
    ResponseRoomFromJSON,
    ResponseRoomFromJSONTyped,
    ResponseRoomToJSON,
} from './';

/**
 * 
 * @export
 * @interface ResponseEventDetail
 */
export interface ResponseEventDetail {
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    eventId: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    description: string;
    /**
     * 部屋の共用をするか
     * @type {boolean}
     * @memberof ResponseEventDetail
     */
    sharedRoom: boolean;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    timeStart: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    timeEnd: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    place: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    groupName: string;
    /**
     * 
     * @type {ResponseRoom}
     * @memberof ResponseEventDetail
     */
    room: ResponseRoom;
    /**
     * 
     * @type {ResponseGroup}
     * @memberof ResponseEventDetail
     */
    group: ResponseGroup;
    /**
     * 編集権を持つユーザー
     * @type {Array<string>}
     * @memberof ResponseEventDetail
     */
    admins: Array<string>;
    /**
     * 
     * @type {Array<ResponseEventTags>}
     * @memberof ResponseEventDetail
     */
    tags: Array<ResponseEventTags>;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    createdBy: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseEventDetail
     */
    updatedAt: string;
}

export function ResponseEventDetailFromJSON(json: any): ResponseEventDetail {
    return ResponseEventDetailFromJSONTyped(json, false);
}

export function ResponseEventDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseEventDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventId': json['eventId'],
        'name': json['name'],
        'description': json['description'],
        'sharedRoom': json['sharedRoom'],
        'timeStart': json['timeStart'],
        'timeEnd': json['timeEnd'],
        'place': json['place'],
        'groupName': json['groupName'],
        'room': ResponseRoomFromJSON(json['room']),
        'group': ResponseGroupFromJSON(json['group']),
        'admins': json['admins'],
        'tags': ((json['tags'] as Array<any>).map(ResponseEventTagsFromJSON)),
        'createdBy': json['createdBy'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function ResponseEventDetailToJSON(value?: ResponseEventDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eventId': value.eventId,
        'name': value.name,
        'description': value.description,
        'sharedRoom': value.sharedRoom,
        'timeStart': value.timeStart,
        'timeEnd': value.timeEnd,
        'place': value.place,
        'groupName': value.groupName,
        'room': ResponseRoomToJSON(value.room),
        'group': ResponseGroupToJSON(value.group),
        'admins': value.admins,
        'tags': ((value.tags as Array<any>).map(ResponseEventTagsToJSON)),
        'createdBy': value.createdBy,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}


